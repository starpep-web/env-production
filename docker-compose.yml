services:
  neo4j:
    image: ghcr.io/starpep-web/neo4j-db:latest
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      NEO4J_AUTH: none

  redis:
    image: redis:7.4.1-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./data-redis:/data
    environment:
      TZ: ${TIMEZONE}

  tunnel:
    image: cloudflare/cloudflared:2024.10.1
    restart: unless-stopped
    command: tunnel run
    environment:
      TZ: ${TIMEZONE}
      TUNNEL_TOKEN: ${CLOUDFLARE_TUNNEL_TOKEN}

  proxy:
    image: traefik:v3.2
    restart: unless-stopped
    depends_on:
      - tunnel
    ports:
      - "80:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yaml
    environment:
      TZ: ${TIMEZONE}
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`${DOMAIN_PROXY}`)
      traefik.http.routers.traefik.entrypoints: tunnel
      traefik.http.routers.traefik.service: traefik@docker
      traefik.http.services.traefik.loadbalancer.server.port: 8080

  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    volumes:
      - ./data-portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TIMEZONE}
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`${DOMAIN_PORTAINER}`)
      traefik.http.routers.portainer.entrypoints: tunnel
      traefik.http.routers.portainer.service: portainer@docker
      traefik.http.services.portainer.loadbalancer.server.port: 9000

  api_bio:
    image: ghcr.io/starpep-web/api-bio:latest
    restart: unless-stopped
    depends_on:
      - neo4j
      - redis
    volumes:
      - ${ASSETS_FILES_LOCATION}:/opt/files:ro
      - ${ASSETS_TEMP_ARTIFACTS_LOCATION}:/tmp/files
    environment:
      TZ: ${TIMEZONE}
      REDIS_URI: redis://redis:6379
      NEO4J_DB_URI: bolt://neo4j:7687
      ASSETS_LOCATION: /opt/files
      TEMP_ARTIFACTS_LOCATION: /tmp/files

  api_service:
    image: ghcr.io/starpep-web/api-service:latest
    restart: unless-stopped
    depends_on:
      - neo4j
    environment:
      TZ: ${TIMEZONE}
      NEO4J_DB_URI: bolt://neo4j:7687

  cron:
    image: ghcr.io/starpep-web/cron:latest
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ${ASSETS_TEMP_ARTIFACTS_LOCATION}:/tmp/files
    environment:
      TZ: ${TIMEZONE}
      REDIS_URI: redis://redis:6379
      TEMP_ARTIFACTS_LOCATION: /tmp/files

  files:
    image: ghcr.io/starpep-web/static-file-server:latest
    restart: unless-stopped
    depends_on:
      - proxy
    volumes:
      - ${ASSETS_FILES_LOCATION}:/files:ro
      - ${ASSETS_TEMP_ARTIFACTS_LOCATION}:/tmp/files:ro
    environment:
      TZ: ${TIMEZONE}
    labels:
      traefik.enable: true
      traefik.http.routers.files.rule: Host(`${DOMAIN_FILES_SERVER}`)
      traefik.http.routers.files.entrypoints: tunnel
      traefik.http.routers.files.service: files@docker
      traefik.http.services.files.loadbalancer.server.port: 8080

  cms:
    image: ghcr.io/starpep-web/web-cms:latest
    restart: unless-stopped
    depends_on:
      - proxy
    volumes:
      - ./data-cms/db:/opt/data
      - ./data-cms/public:/opt/app/public
    environment:
      TZ: ${TIMEZONE}
      APP_KEYS: ${CMS_APP_KEYS}
      API_TOKEN_SALT: ${CMS_API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${CMS_ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${CMS_TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${CMS_JWT_SECRET}
      DATABASE_CLIENT: sqlite
      DATABASE_FILENAME: /opt/data/data.db
    labels:
      traefik.enable: true
      traefik.http.routers.cms.rule: Host(`${DOMAIN_CMS}`)
      traefik.http.routers.cms.entrypoints: tunnel
      traefik.http.routers.cms.service: cms@docker
      traefik.http.services.cms.loadbalancer.server.port: 1337

  web:
    image: ghcr.io/starpep-web/web-frontend:latest
    restart: unless-stopped
    depends_on:
      - proxy
      - api_bio
      - api_service
      - files
      - cms
    environment:
      TZ: ${TIMEZONE}
      API_URL: http://api_service:4000
      BIO_API_URL: http://api_bio:8000
      LOCAL_DOWNLOADS_URL: http://files:8080
      NEXT_PUBLIC_URL: ${WEB_PUBLIC_URL}
      NEXT_PUBLIC_DOWNLOADS_URL: ${WEB_PUBLIC_ASSETS_URL}
      NEXT_REVALIDATE_TIME: 3600
      NEXT_INTERNAL_AUTH_SECRET: ${SHARED_INTERNAL_SECRET}
      STRAPI_API_TOKEN: ${WEB_CMS_TOKEN}
      NEXT_PUBLIC_STRAPI_URL: ${WEB_CMS_URL}
    labels:
      traefik.enable: true
      traefik.http.routers.web.rule: Host(`${DOMAIN_WEB}`)
      traefik.http.routers.web.entrypoints: tunnel
      traefik.http.routers.web.service: web@docker
      traefik.http.services.web.loadbalancer.server.port: 3000
